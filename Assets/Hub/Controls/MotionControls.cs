//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Hub/Controls/MotionControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @MotionControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @MotionControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""MotionControls"",
    ""maps"": [
        {
            ""name"": ""MotionTracking"",
            ""id"": ""62189d91-533b-485b-a732-75da432b9b50"",
            ""actions"": [
                {
                    ""name"": ""FootRaise"",
                    ""type"": ""Button"",
                    ""id"": ""b397b7a3-ade3-40ea-bdd3-41804734f245"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FootLower"",
                    ""type"": ""Button"",
                    ""id"": ""ad06f6e7-0c37-48f5-a221-eaf455501166"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FootHeight"",
                    ""type"": ""Value"",
                    ""id"": ""a2342602-806a-4f36-9dca-0e589404f95d"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""WeightShiftX"",
                    ""type"": ""Value"",
                    ""id"": ""4b1c3c3c-8751-4fb3-8759-5c1b549effea"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""WeightShiftLeft"",
                    ""type"": ""Button"",
                    ""id"": ""9feb59db-cf14-4a38-a64d-fd5200a068f9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WeightShiftRight"",
                    ""type"": ""Button"",
                    ""id"": ""9c3b3fb7-832a-486f-a864-9bec6f6a0daa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2effb81d-5aee-4a98-bdb5-4aad9a95dd71"",
                    ""path"": ""<CapturyInput>/footRaise"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FootRaise"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6464aa00-795c-468d-b25c-83698546f8e5"",
                    ""path"": ""<CapturyInput>/footLower"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FootLower"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""22109154-dded-4791-a29b-3e1b2891670a"",
                    ""path"": ""<CapturyInput>/footHeight"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FootHeight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b89e1a6d-f59b-4d0b-aee3-c7cd968b1e88"",
                    ""path"": ""<CapturyInput>/weightShiftX"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WeightShiftX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""134c641a-f7ed-4b33-88dc-3bb6de3fef30"",
                    ""path"": ""<CapturyInput>/weightShiftLeft"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WeightShiftLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""03541db4-12eb-464c-842a-af1885380534"",
                    ""path"": ""<CapturyInput>/weightShiftRight"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WeightShiftRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // MotionTracking
        m_MotionTracking = asset.FindActionMap("MotionTracking", throwIfNotFound: true);
        m_MotionTracking_FootRaise = m_MotionTracking.FindAction("FootRaise", throwIfNotFound: true);
        m_MotionTracking_FootLower = m_MotionTracking.FindAction("FootLower", throwIfNotFound: true);
        m_MotionTracking_FootHeight = m_MotionTracking.FindAction("FootHeight", throwIfNotFound: true);
        m_MotionTracking_WeightShiftX = m_MotionTracking.FindAction("WeightShiftX", throwIfNotFound: true);
        m_MotionTracking_WeightShiftLeft = m_MotionTracking.FindAction("WeightShiftLeft", throwIfNotFound: true);
        m_MotionTracking_WeightShiftRight = m_MotionTracking.FindAction("WeightShiftRight", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // MotionTracking
    private readonly InputActionMap m_MotionTracking;
    private List<IMotionTrackingActions> m_MotionTrackingActionsCallbackInterfaces = new List<IMotionTrackingActions>();
    private readonly InputAction m_MotionTracking_FootRaise;
    private readonly InputAction m_MotionTracking_FootLower;
    private readonly InputAction m_MotionTracking_FootHeight;
    private readonly InputAction m_MotionTracking_WeightShiftX;
    private readonly InputAction m_MotionTracking_WeightShiftLeft;
    private readonly InputAction m_MotionTracking_WeightShiftRight;
    public struct MotionTrackingActions
    {
        private @MotionControls m_Wrapper;
        public MotionTrackingActions(@MotionControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @FootRaise => m_Wrapper.m_MotionTracking_FootRaise;
        public InputAction @FootLower => m_Wrapper.m_MotionTracking_FootLower;
        public InputAction @FootHeight => m_Wrapper.m_MotionTracking_FootHeight;
        public InputAction @WeightShiftX => m_Wrapper.m_MotionTracking_WeightShiftX;
        public InputAction @WeightShiftLeft => m_Wrapper.m_MotionTracking_WeightShiftLeft;
        public InputAction @WeightShiftRight => m_Wrapper.m_MotionTracking_WeightShiftRight;
        public InputActionMap Get() { return m_Wrapper.m_MotionTracking; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MotionTrackingActions set) { return set.Get(); }
        public void AddCallbacks(IMotionTrackingActions instance)
        {
            if (instance == null || m_Wrapper.m_MotionTrackingActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MotionTrackingActionsCallbackInterfaces.Add(instance);
            @FootRaise.started += instance.OnFootRaise;
            @FootRaise.performed += instance.OnFootRaise;
            @FootRaise.canceled += instance.OnFootRaise;
            @FootLower.started += instance.OnFootLower;
            @FootLower.performed += instance.OnFootLower;
            @FootLower.canceled += instance.OnFootLower;
            @FootHeight.started += instance.OnFootHeight;
            @FootHeight.performed += instance.OnFootHeight;
            @FootHeight.canceled += instance.OnFootHeight;
            @WeightShiftX.started += instance.OnWeightShiftX;
            @WeightShiftX.performed += instance.OnWeightShiftX;
            @WeightShiftX.canceled += instance.OnWeightShiftX;
            @WeightShiftLeft.started += instance.OnWeightShiftLeft;
            @WeightShiftLeft.performed += instance.OnWeightShiftLeft;
            @WeightShiftLeft.canceled += instance.OnWeightShiftLeft;
            @WeightShiftRight.started += instance.OnWeightShiftRight;
            @WeightShiftRight.performed += instance.OnWeightShiftRight;
            @WeightShiftRight.canceled += instance.OnWeightShiftRight;
        }

        private void UnregisterCallbacks(IMotionTrackingActions instance)
        {
            @FootRaise.started -= instance.OnFootRaise;
            @FootRaise.performed -= instance.OnFootRaise;
            @FootRaise.canceled -= instance.OnFootRaise;
            @FootLower.started -= instance.OnFootLower;
            @FootLower.performed -= instance.OnFootLower;
            @FootLower.canceled -= instance.OnFootLower;
            @FootHeight.started -= instance.OnFootHeight;
            @FootHeight.performed -= instance.OnFootHeight;
            @FootHeight.canceled -= instance.OnFootHeight;
            @WeightShiftX.started -= instance.OnWeightShiftX;
            @WeightShiftX.performed -= instance.OnWeightShiftX;
            @WeightShiftX.canceled -= instance.OnWeightShiftX;
            @WeightShiftLeft.started -= instance.OnWeightShiftLeft;
            @WeightShiftLeft.performed -= instance.OnWeightShiftLeft;
            @WeightShiftLeft.canceled -= instance.OnWeightShiftLeft;
            @WeightShiftRight.started -= instance.OnWeightShiftRight;
            @WeightShiftRight.performed -= instance.OnWeightShiftRight;
            @WeightShiftRight.canceled -= instance.OnWeightShiftRight;
        }

        public void RemoveCallbacks(IMotionTrackingActions instance)
        {
            if (m_Wrapper.m_MotionTrackingActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMotionTrackingActions instance)
        {
            foreach (var item in m_Wrapper.m_MotionTrackingActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MotionTrackingActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MotionTrackingActions @MotionTracking => new MotionTrackingActions(this);
    public interface IMotionTrackingActions
    {
        void OnFootRaise(InputAction.CallbackContext context);
        void OnFootLower(InputAction.CallbackContext context);
        void OnFootHeight(InputAction.CallbackContext context);
        void OnWeightShiftX(InputAction.CallbackContext context);
        void OnWeightShiftLeft(InputAction.CallbackContext context);
        void OnWeightShiftRight(InputAction.CallbackContext context);
    }
}
